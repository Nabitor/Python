# coding=utf-8
import dis


c = 257

def foo():
    a = 257
    b = 257

    print a is b
    print b is c


'''
为什么b is c输出False呢？
Python程序由代码块构成，代码块作为程序的一个最小基本单位来执行。
一个模块文件、一个函数体、一个类、交互式命令中的单行代码都叫做一个代码块。
在上面这段代码中，由两个代码块构成， c = 257作为一个代码块，函数 foo作为另外一个代码块。
Python内部为了将性能进一步的提高，凡是在一个代码块中创建的整数对象，
如果存在一个值与其相同的对象于该代码块中了，那么就直接引用，
否则创建一个新的对象出来。Python出于对性能的考虑，
但凡是不可变对象，在同一个代码块中的对象，只有是值相同的对象，就不会重复创建，
而是直接引用已经存在的对象。因此，不仅是整数对象，还有字符串对象也遵循同样的原则。
所以 a is b就理所当然的返回 True了，而 c和 a不在同一个代码块中，
因此在Python内部创建了两个值都是257的对象。
'''

def foo_():
    a = 257
    b = 257

    print a == b
    print b == c


if __name__ == '__main__':
    foo_()
    dist.dist(foo)
